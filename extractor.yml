AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Resources:
  ExtractText:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: java8
      CodeUri: 
        Bucket: !Ref DeployBucket
        Key: !Ref ExtractorJarKey      
      Handler: assignmentmarker.extractor.TikaLambdaHandler::handleRequest
      Timeout: 30
      MemorySize: 1536
      Timeout: 60
      Policies: AWSLambdaExecute
      Events:
        PdfFileUploaded:
          Type: S3
          Properties:
            Bucket: !Ref UploadBucket
            Events: s3:ObjectCreated:*
            Filter:
              S3Key: 
                Rules: 
                  - 
                    Name: suffix
                    Value: .pdf
                  - 
                    Name: prefix
                    Value: uploads
        DocFileUploaded:
          Type: S3
          Properties:
            Bucket: !Ref UploadBucket
            Events: s3:ObjectCreated:*
            Filter:
              S3Key: 
                Rules: 
                  - 
                    Name: suffix
                    Value: .doc
                  - 
                    Name: prefix
                    Value: uploads
        DocxFileUploaded:
          Type: S3
          Properties:
            Bucket: !Ref UploadBucket
            Events: s3:ObjectCreated:*
            Filter:
              S3Key: 
                Rules: 
                  - 
                    Name: suffix
                    Value: .docx
                  - 
                    Name: prefix
                    Value: uploads

#  ProcessEmail:
#    Type: AWS::Serverless::Function
#    Properties:
#      Runtime: java8
#      CodeUri: 
#        Bucket: !Ref DeployBucket
#        Key: !Ref ExtractorJarKey      
#      Handler: assignmentmarker.extractor.TikaLambdaHandler::handleRequest
#      Timeout: 30
#      MemorySize: 1536
#      Timeout: 60
#      Policies: AWSLambdaExecute
#      Events:
#        PdfFileUploaded:
#          Type: S3
#          Properties:
#            Bucket: !Ref UploadBucket
#            Events: s3:ObjectCreated:*
#            Filter:
#              S3Key: 
#                Rules: 
#                  - 
#                    Name: prefix
#                    Value: emails

  UploadBucket:
    Type: AWS::S3::Bucket
    Name: !Ref UploadBucketName


  UploadBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties: 
      Bucket: !Ref UploadBucketName
      PolicyDocument: !Sub |
        '{
            "Version": "2008-10-17",
            "Statement": [
                {
                    "Sid": "GiveSESPermissionToWriteEmail",
                    "Effect": "Allow",
                    "Principal": { "Service": [ "ses.amazonaws.com" ] },
                    "Action": [ "s3:PutObject" ],
                    "Resource": [ "arn:aws:s3:::${UploadBucketName}/*" ],
                    "Condition": { "StringEquals": { "aws:Referer": "${AWS::AccountId}" } }
                }
            ]
        }'
Parameters:
  UploadBucketName:
    Type: String
    Default: 'assignment-uploads'
  DeployBucket:
    Type: String
  ExtractorJarKey:
    Type: String
Outputs:
  S3BucketConsole:
    Value: !Sub
      - https://console.aws.amazon.com/s3/buckets/${BucketName}/${AWS::Region}&tab=overview
      - BucketName: !Ref UploadBucket
  S3BucketSecureURL:
    Value: !Sub
      - https://${Domain}
      - Domain: !GetAtt UploadBucket.DomainName
    Description: Name of the S3 bucket to hold website content
